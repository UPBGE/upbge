/* SPDX-License-Identifier: Apache-2.0
 * Copyright 2011-2022 Blender Foundation */

#include "node_hash.h"
#include "stdcycles.h"
#include "vector2.h"
#include "vector4.h"

#define vector3 point

shader node_white_noise_texture(string dimensions = "3D",
                                point Vector = point(0.0, 0.0, 0.0),
                                float W = 0.0,
                                output float Value = 0.0,
                                output color Color = 0.0)
{
  if (dimensions == "1D") {
    Value = noise("hash", W);
    Color = hash_float_to_color(W);
  }
  else if (dimensions == "2D") {
    Value = noise("hash", Vector[0], Vector[1]);
    Color = hash_vector2_to_color(vector2(Vector[0], Vector[1]));
  }
  else if (dimensions == "3D") {
    Value = noise("hash", Vector);
    Color = hash_vector3_to_color(vector3(Vector[0], Vector[1], Vector[2]));
  }
  else if (dimensions == "4D") {
    Value = noise("hash", Vector, W);
    Color = hash_vector4_to_color(vector4(Vector[0], Vector[1], Vector[2], W));
  }
  else {
    warning("%s", "Unknown dimension!");
  }
}
