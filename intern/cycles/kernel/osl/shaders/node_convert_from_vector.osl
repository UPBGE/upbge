/* SPDX-License-Identifier: Apache-2.0
 * Copyright 2011-2022 Blender Foundation */

#include "stdcycles.h"

shader node_convert_from_vector(vector value_vector = vector(0.0, 0.0, 0.0),
                                output string value_string = "",
                                output float value_float = 0.0,
                                output int value_int = 0,
                                output color value_color = color(0.0, 0.0, 0.0),
                                output point value_point = point(0.0, 0.0, 0.0),
                                output normal value_normal = normal(0.0, 0.0, 0.0))
{
  value_float = (value_vector[0] + value_vector[1] + value_vector[2]) * (1.0 / 3.0);
  value_int = (int)((value_normal[0] + value_normal[1] + value_normal[2]) * (1.0 / 3.0));
  value_color = color(value_vector[0], value_vector[1], value_vector[2]);
  value_point = point(value_vector[0], value_vector[1], value_vector[2]);
  value_normal = normal(value_vector[0], value_vector[1], value_vector[2]);
}
